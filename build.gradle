plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "io.freefair.lombok" version "5.3.0"
	id 'java'
	id 'jacoco'
	id "org.asciidoctor.convert" version "1.5.9.2"
}

ext {
	h2Version = "1.4.199"
	snippetsDir = file('build/generated-snippets')
}

group = 'kim.chunghyeon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
	testFixtures {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}

	intTest {
		compileClasspath += sourceSets.main.output
		compileClasspath += sourceSets.test.output
		compileClasspath += sourceSets.testFixtures.output

		runtimeClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.test.output
		runtimeClasspath += sourceSets.testFixtures.output
	}

	test {
		compileClasspath += sourceSets.testFixtures.output
		runtimeClasspath += sourceSets.testFixtures.output
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly "com.h2database:h2:${h2Version}"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	intTestImplementation 'org.springframework.boot:spring-boot-starter-test'
	testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()

	jacoco {
		excludes = ["**/*Application.java"]
	}

	outputs.dir snippetsDir
}

jacocoTestReport {
	dependsOn test
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

configurations {
	intTestImplementation.extendsFrom implementation
	intTestRuntimeOnly.extendsFrom runtimeOnly
}

task integrationTest(type: Test) {
	useJUnitPlatform()

	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.intTest.output.classesDirs
	classpath = sourceSets.intTest.runtimeClasspath
	shouldRunAfter test
}

check.dependsOn integrationTest